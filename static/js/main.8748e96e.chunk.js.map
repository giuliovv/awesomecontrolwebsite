{"version":3,"sources":["JSONTable.js","App.js","reportWebVitals.js","index.js"],"names":["JSONTable","_ref","data","url","validURL","startsWith","concat","React","createElement","TableBody","TableRow","TableCell","align","Link","href","target","rel","name","headquarter","short_description","tags","join","App","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","searchTerm","setSearchTerm","useEffect","axios","get","then","response","combinedData","dataArray","Object","values","catch","error","console","filteredData","filter","item","toLowerCase","includes","some","tag","className","Box","display","flexDirection","alignItems","mb","Typography","variant","gutterBottom","GitHubIcon","style","marginLeft","TextField","label","fullWidth","value","onChange","e","Table","minWidth","TableHead","backgroundColor","fontWeight","map","index","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8748e96e.chunk.js","sourcesContent":["import React from 'react';\nimport { TableBody, TableCell, TableRow, Link } from '@mui/material';\n\nexport default function JSONTable({ data }) {\n  const url = data.url;\n\n  // If url doesn't start with 'http' or 'https', prepend 'http://'\n  const validURL = url.startsWith('http://') || url.startsWith('https://') ? url : `http://${url}`;\n\n  return (\n    <TableBody>\n      <TableRow>\n        <TableCell align=\"center\">\n          <Link href={validURL} target=\"_blank\" rel=\"noopener noreferrer\">\n            {data.name}\n          </Link>\n        </TableCell>\n        <TableCell align=\"center\">{data.headquarter}</TableCell>\n        <TableCell align=\"center\">{data.short_description}</TableCell>\n        <TableCell align=\"center\">{data.tags.join(', ')}</TableCell>\n      </TableRow>\n    </TableBody>\n  );\n}","import React from 'react';\nimport JSONTable from './JSONTable';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table, TableHead, TableRow, TableCell, Typography, Link, Box, TextField } from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    // Assuming your combined file is named all_data.json\n    const dataUrl = 'https://raw.githubusercontent.com/guidosassaroli/controlcompanies/main/data/all_data.json';\n    \n    axios.get(dataUrl)\n      .then(response => {\n        const combinedData = response.data;\n        const dataArray = Object.values(combinedData);\n        setData(dataArray);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const filteredData = data.filter((item) => {\n    return (\n      item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      item.tags.some((tag) => tag.toLowerCase().includes(searchTerm.toLowerCase())) ||\n      item.headquarter.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  });\n\n  return (\n    <div className=\"App\">\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mb={4}>\n        <Typography variant=\"h3\" gutterBottom align=\"center\">\n          Awesome Control Companies\n        </Typography>\n\n        <Link href=\"https://github.com/guidosassaroli/controlcompanies/tree/main\" target=\"_blank\" rel=\"noopener\">\n          <Box display=\"flex\" alignItems=\"center\">\n            <GitHubIcon />\n            <Typography variant=\"body1\" style={{ marginLeft: 8 }}>\n              View on GitHub\n            </Typography>\n          </Box>\n        </Link>\n      </Box>\n\n      <Box mb={2}>\n        <TextField\n          label=\"Search by name, tags or place\"\n          variant=\"outlined\"\n          fullWidth\n          value={searchTerm}\n          onChange={handleSearch}\n        />\n      </Box>\n\n      <Table style={{ minWidth: 700 }}>\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ backgroundColor: '#f1f1f1', fontWeight: 'bold' }} align=\"center\">Name</TableCell>\n            <TableCell style={{ backgroundColor: '#f1f1f1', fontWeight: 'bold' }} align=\"center\">Headquarter</TableCell>\n            <TableCell style={{ backgroundColor: '#f1f1f1', fontWeight: 'bold' }} align=\"center\">Short Description</TableCell>\n            <TableCell style={{ backgroundColor: '#f1f1f1', fontWeight: 'bold' }} align=\"center\">Tags</TableCell>\n          </TableRow>\n        </TableHead>\n        {filteredData.map((item, index) => (\n          <JSONTable key={index} data={item} />\n        ))}\n      </Table>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}